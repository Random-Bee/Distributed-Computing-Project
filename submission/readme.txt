Dependencies:

Make sure your system has `openssl`, the development headers, make and zeromq installed. On Ubuntu, you can install these with:

```bash
sudo apt-get install libssl-dev openssl make
```

Install the cpp zeromq library as per instructions given on its site.

Running the project:

The IP addresses of the nodes need to be given in the `inp.txt` file in the following format:

```
<Number of Nodes>
<IP Address of Machine 0>
<IP Address of Machine 1>

...

Make sure that there is a newline at the end of the file.

To run the project, compile main.cpp using the following command:

g++ -o main main.cpp -lzmq -lcrypto

Then run the generated binary using the following command:

./main <Machine Number>

Changing the DHT: Go to `src/main.cpp` and change include header to `kademlia.hpp` or `pastry.hpp` to switch between the two DHTs.

Running the project on multiple systems:

To run the project on multiple systems, you need to manually compile the project on each system and run the generated binary. 

To run the generated binary, use the following command:

```bash
./main <Machine Number>
```

Note that the machine number should be between 0 and the number of machines - 1. 
Also the order of the IP addresses in the `inp.txt` file should be the same as the order of the machine numbers.

To run the application, compile app.cpp using the following command:

g++ -o app app.cpp -lzmq

Then run the generated binary using the following command:

./app <IP Address of Machine:Port Number>

Example: ./app 127.0.0.1:9000

Make sure that the IP address and port number is unique and does not match with any other node generated by the main file.

Further instructions is given in the terminal when the application is run.